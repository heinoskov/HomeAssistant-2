light_control:
  input_number:
    timeout_forgotten_light:
      name: Sluk glemt lys
      icon: mdi:timer
      initial: 10
      min: 1
      max: 15
      step: 1
    
    timeout_arrived_night:
      name: Sluk lyset ved ankomst
      icon: mdi:timer
      initial: 5
      min: 1
      max: 15
      step: 1

    sun_elevation_light:
      name: Under horisonten
      initial: 4
      min: 0
      max: 6
      step: 1
      icon: mdi:weather-sunset-down

    dim_high:
      name: Normal lysstyrke
      icon: mdi:car-light-high
      initial: 254
      min: 0
      max: 254
      step: 1
    
    dim_low:
      name: Laveste lysstyrke
      icon: mdi:car-light-dimmed
      initial: 10
      min: 0
      max: 254
      step: 1

  input_datetime:
    dim_time:
      name: Dæmp lyset tidligst
      icon: mdi:clock
      has_date: false
      has_time: true

  binary_sensor:
    - platform: template
      sensors:
        night:
          friendly_name: "Det er nat"
          value_template: >-
            {{
              state_attr('sun.sun', 'elevation') <= (0 - states('input_number.sun_elevation_light') | float )
              and
              (
                states('sensor.time') >= state_attr("input_datetime.dim_time", "timestamp") | int | timestamp_custom('%H:%M', false)
                or
                states('sensor.time') <= "12:00"
              )
            }}

  automation:

    - alias: "Havegang - autosluk dag"
      description: "Der er nogen som har tændt lyset i havegangen, hvis det er dag - så sluk det"
      initial_state: true
      mode: single
      trigger:
        - platform: state
          entity_id:
            - light.havegang
          from: "off"
          to: "on"
      action:
        - service: "light.turn_{{ 'off' if is_state('binary_sensor.night', 'off') else 'on' }}"
          entity_id:
            - light.havegang

    - alias: "Husnummer - tænd/sluk"
      description: "Tænd lyset ved husnummeret når solen er unde "
      initial_state: true
      mode: single
      trigger:
        - platform: state
          entity_id: sun.sun
      action:
        - service: "light.turn_{{ 'on' if is_state('sun.sun', 'below_horizon') else 'off' }}"
          entity_id:
            - light.husnummer

    - alias: "Havelåge/hoveddør - tænd lys"
      description: "Tænd lyset ved husnummeret og havegangen når havelågen eller døren åbnes når det er mørkt"
      initial_state: true
      mode: restart
      trigger:
        - platform: state
          entity_id:
            - binary_sensor.havelage
            - binary_sensor.hoveddor
          from: "off"
          to: "on"
      condition: "{{ is_state('sun.sun', 'below_horizon') }}"
      variables:
        husnummer_state: "{{ states('light.husnummer') }}"
        indgang_state: "{{ states('light.indgang') }}"
      action:
        - service: light.turn_on
          data:
            entity_id:
              - light.havegangen
              - light.husnummer
            brightness: '255'

        - choose:
            - conditions:
                - condition: state
                  entity_id: light.indgang
                  state: "off"
              sequence:
                - service: light.turn_on
                  data:
                    entity_id: light.indgang

        - delay: "{{ states('input_number.timeout_arrived_night') | multiply(60) | int }}"

        - service: light.turn_off
          data:
            entity_id:
              - light.havegangen

        - service: "light.turn_{{ husnummer_state }}"
          data:
            entity_id:
              - light.havegangen
        - service: "light.turn_{{ indgang_state }}"
          data:
            entity_id:
              - light.indgang

    - alias: "Værelser - autosluk"
      description: "Sluk lyset på værelser efter timeout"
      initial_state: true
      mode: parallel
      trigger:
        # Trigger - state of the group of lights i the wanted rooms
        - platform: state
          entity_id:
            - group.colins_vaerelse
            - group.emilios_vaerelse
          from: "off"
          to: "on"
          # Timeout value
          for:
            minutes: "{{ states('input_number.timeout_forgotten_light') | int }}"
      action:
        service: light.turn_off
        # Turn the entity that was the trigger
        data:
          entity_id: "{{ trigger.entity_id }}"
hal_9000:

  var:
    morning:
    greetings:
    reminder:
    trash:
    recycle:

  input_datetime:
    announce_at_time:
      name: Tidspunkt for oplæsning
      icon: mdi:clock-outline
      has_date: false
      has_time: true
      initial: "09:00"

  input_number:
    announce_volume:
      name: Lydstyrke ved oplæsning
      initial: 0.4
      min: 0.1
      max: 1
      step: 0.1

  automation:
    - alias: "Godmorgen"
      description: "Oplæsning af hilsen, vejret og om der skal hentes affald/genbrug"
      initial_state: true
      mode: single
      trigger:
        - platform: template
          value_template: "{{ states('sensor.time') == states('input_datetime.announce_at_time' ) }}"
      action:
        - service: homeassistant.update_entity
          data:
            entity_id:
              - sensor.tid_naturlig

        - service: script.store_volume
          data:
            entity_id: media_player.kokken
            volume: "{{ states('input_number.announce_volume') }}"

        - service: media_player.play_media
          entity_id: media_player.kokken
          data:
            media_content_id: 'http://soundbible.com/grab.php?id=1510&type=mp3'
            media_content_type: music

        - service: tts.google_translate_say
          entity_id: media_player.kokken
          data:
            message: >-
              {% set len = states('var.greetings').split("|") | length %}
              {% set ran_idx = range(0, len) | random() %}
              {{ states('var.greetings').split("|")[ran_idx] }}

              Det er i dag {{ state_attr('sensor.dato', 'ugedag') }} den {{ state_attr('sensor.dato', 'dato_ordenstal') }} {{ state_attr('sensor.dato', 'maaned') }}.

              Klokken er {{ states('sensor.tid_naturlig') }} og der er lige nu cirka {{ state_attr('weather.brobyvaerk', 'temperature') | round }} grader i {{ state_attr('weather.brobyvaerk', 'friendly_name') }}.

              UV-indexet når i dag {{ states('sensor.max_uv_index') | round(2) | replace('.', ',') }} og er højest klokken {{ state_attr('sensor.uv_sun', 'uv_max_natural') }} og der anbefales solcreme mellem {{ state_attr('sensor.uv_sun', 'protection_start_time_natural') }} og {{ state_attr('sensor.uv_sun', 'protection_end_time_natural') }}.

              {% set len = states('var.reminder').split("|") | length %}
              {% set ran_idx = range(0, len) | random() %}
              
              {%- if is_state_attr('sensor.affald_hentes', 'days', '1') %}
                {{ states('var.reminder').split("|")[ran_idx] }} {{ states('var.reminder').split("|")[ran_idx] }} {{ states('var.trash') }}
              {% elif is_state_attr('sensor.genbrug_hentes', 'days', '11') %}
                {{ states('var.reminder').split("|")[ran_idx] }} {{ states('var.recycle') }}
              {% endif -%}

        - service: script.reset_volume
          data:
            entity_id: media_player.kokken
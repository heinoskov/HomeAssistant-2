hal_9000:

  var:
    morning:
    greetings:
    reminder:
    trash:
    recycle:

  input_datetime:
    announce_at_time:
      name: Tidspunkt for oplæsning
      icon: mdi:clock-outline
      has_date: false
      has_time: true
      initial: "09:00"

  sensor:
    - platform: scrape
      name: Dagens navn
      resource: https://www.navnedag.dk
      select: "h1"

  automation:
    - alias: "Godmorgen"
      id: 3fefd775a54746a5864c7981f28b36ea
      description: "Oplæsning af hilsen, vejret og om der skal hentes affald/genbrug"
      initial_state: true
      mode: single
      trigger:
        - platform: time
          at: input_datetime.announce_at_time
      variables:
        saved_volume: "{{ state_attr('media_player.kokken', 'volume_level') }}"
      action:
        - service: homeassistant.update_entity
          data:
            entity_id:
              - sensor.tid_naturlig

        - service: script.say_something
          data:
            media_player: media_player.kokken
            volume: "{{ (states('input_number.announce_volume') | float) / 100 }}"
            message: >-
              {% set len = states('var.greetings').split("|") | length %}
              {% set ran_idx = range(0, len) | random() %}
              {{ states('var.greetings').split("|")[ran_idx] }},.
              
              Klokken er {{ states('sensor.tid_naturlig') }}, og det er i dag {{ state_attr('sensor.dato', 'ugedag') }} den {{ state_attr('sensor.dato', 'dato_ordenstal') }} {{ state_attr('sensor.dato', 'maaned') }},.
              Dagens navn er {{ states('sensor.dagens_navn') }},.
              
              Temperaturen, i {{ state_attr('weather.brobyvaerk', 'friendly_name') }}, er lige nu {{ state_attr('weather.brobyvaerk', 'temperature') | round }} grader som vil føles som mellem {{ states('sensor.brobyvaerk_realfeel_temperature_min_0d') | round }} og {{ states('sensor.brobyvaerk_realfeel_temperature_max_0d') | round }} grader,.
              {% if states('sensor.brobyvaerk_precipitation') | int > 0 %}
                Der forventes at falde {{ states('sensor.brobyvaerk_precipitation') | round }} {{ state_attr('sensor.brobyvaerk_precipitation', 'unit_of_measurement') }} i løbet af dagen i dag,.
              {% endif %}
              
              {%- if ( states('sensor.brobyvaerk_thunderstorm_probability_day_0d') | int ) > 0 %}
                Der er {{ states('sensor.brobyvaerk_thunderstorm_probability_day_0d') }} {{ state_attr('sensor.brobyvaerk_thunderstorm_probability_day_0d', 'unit_of_measurement') }} risiko for torden i dagtimerne,.
                {%- if states('sensor.brobyvaerk_thunderstorm_probability_night_0d') | int > 0 %}
                  og {{ states('sensor.brobyvaerk_thunderstorm_probability_night_0d') }} {{ state_attr('sensor.brobyvaerk_thunderstorm_probability_night_0d', 'unit_of_measurement') }} risiko for torden i nat,.
                {%- else -%}
                .
                {% endif %}
              {% endif %}  
              
              {% if states('sensor.max_uv_index') >= states('sensor.uv_sun') %}
              UV-indexet når i dag {{ states('sensor.max_uv_index') | round(2) | replace('.', ',') }},.
              {% endif %}
              
              {% set len = states('var.reminder').split("|") | length %}
              {% set ran_idx = range(0, len) | random() %}
              
              {%- if is_state_attr('sensor.affald_hentes', 'days', '1') %}
                {{ states('var.reminder').split("|")[ran_idx] }} {{ states('var.reminder').split("|")[ran_idx] }} {{ states('var.trash') }},.
              {% elif is_state_attr('sensor.genbrug_hentes', 'days', '1') %}
                {{ states('var.reminder').split("|")[ran_idx] }} {{ states('var.recycle') }},.
              {% endif -%}
honeywell_fan:
  input_number:
    honeywell_timer:
      name: Honeywell sleep
      initial: 0
      min: 0
      max: 7.5
      step: 0.5

  input_boolean:
    private_honeywell_fan_state:
      name: Honeywell state
      icon: mdi:power

    private_honeywell_osc_state:
      name: Honeywell oscillating

    private_honeywell_cooling_state:
      name: Honeywell cooling

  input_select:
    honeywell_fan_speed:
      name: Honeywell speed
      options:
        - Low
        - Medium
        - High
        - Sleep
      initial: Low
      icon: mdi:fan

  automation:
    - alias: "Honeywell fan speed"
      trigger:
        platform: state
        entity_id: input_select.honeywell_fan_speed
      action:
        - service: remote.send_command
          data:
            entity_id: remote.hjaltes_rm_mini
            device: Honeywell Air Con
            command: Fan Speed
            num_repeats: >-
              {%- set ns = namespace(current_speed_idx = 0, new_speed_idx = 3) -%}
              
              {%- for needle in state_attr('input_select.honeywell_fan_speed', 'options') %}
                {%- if needle == trigger.to_state.state %}
                  {%- set ns.new_speed_idx = loop.index0 -%}
                {% endif %}
              {%- endfor %}
              
              {%- for needle in state_attr('input_select.honeywell_fan_speed', 'options') %}
                {%- if needle == trigger.from_state.state %}
                  {%- set ns.current_speed_idx = loop.index0 -%}
                {% endif %}
              {%- endfor %}
  
              {%- if ns.new_speed_idx < ns.current_speed_idx %}
                {{- (state_attr('input_select.honeywell_fan_speed', 'options') | length) - ns.current_speed_idx + ns.new_speed_idx }}
              {% else %}
                {{- ns.new_speed_idx - ns.current_speed_idx }}
              {% endif %}

    - alias: "Honeywell timer"
      trigger:
        platform: state
        entity_id: input_number.honeywell_timer
      action:
        - service: remote.send_command
          data:
            entity_id: remote.hjaltes_rm_mini
            device: Honeywell Air Con
            command: Timer
            num_repeats: >-
              {%- set from = trigger.from_state.state | float %}
              {%- set to = trigger.to_state.state | float %}
              {%- set max = state_attr('input_number.honeywell_timer', 'max') %}
              {%- set step = state_attr('input_number.honeywell_timer', 'step') %}

              {%- if to < from %}
                {{ ( ( max - from ) / step + to / step + 1 ) | int }}
              {% else %}
                {{ ( ( to - from ) / step ) | int }}
              {% endif %}

  switch:
    - platform: template
      switches:
        honeywell_fan:
          value_template: "{{ is_state('input_boolean.private_honeywell_fan_state', 'on') }}"
          turn_on:
            service: script.honeywell_fan_command_boolean
            data:
              remote: remote.hjaltes_rm_mini
              device: Honeywell Air Con
              command: Power
              boolean: input_boolean.private_honeywell_fan_state
          turn_off:
            service: script.honeywell_fan_command_boolean
            data:
              remote: remote.hjaltes_rm_mini
              device: Honeywell Air Con
              command: Power
              boolean: input_boolean.private_honeywell_fan_state

        honeywell_fan_osc:
          value_template: "{{ is_state('input_boolean.private_honeywell_osc_state', 'on') }}"
          turn_on:
            service: script.honeywell_fan_command_boolean
            data:
              remote: remote.hjaltes_rm_mini
              device: Honeywell Air Con
              command: Fan Swing
              boolean: input_boolean.private_honeywell_osc_state
          turn_off:
            service: script.honeywell_fan_command_boolean
            data:
              remote: remote.hjaltes_rm_mini
              device: Honeywell Air Con
              command: Fan Swing
              boolean: input_boolean.private_honeywell_osc_state

        honeywell_fan_cool:
          value_template: "{{ is_state('input_boolean.private_honeywell_cooling_state', 'on') }}"
          turn_on:
            service: script.honeywell_fan_command_boolean
            data:
              remote: remote.hjaltes_rm_mini
              device: Honeywell Air Con
              command: Cooling
              boolean: input_boolean.private_honeywell_cooling_state
          turn_off:
            service: script.honeywell_fan_command_boolean
            data:
              remote: remote.hjaltes_rm_mini
              device: Honeywell Air Con
              command: Cooling
              boolean: input_boolean.private_honeywell_cooling_state

  script:
    honeywell_fan_command_boolean:
      alias: "Send kommando til Honeywell og opdater boolske input m.m."
      icon: mdi:power
      sequence:
        - service: remote.send_command
          data:
            entity_id: "{{ remote }}"
            device: "{{ device }}"
            command: "{{ command }}"
        - service: input_boolean.toggle
          data:
            entity_id: "{{ boolean }}"
        - condition: state
          entity_id: input_boolean.private_honeywell_fan_state
          state: 'off'
        - service: input_select.select_option
          data:
            entity_id: input_select.honeywell_fan_speed
            option: "{{ state_attr('input_select.honeywell_fan_speed', 'options')[0] }}"
        - service: input_boolean.turn_off
          data:
            entity_id: input_boolean.private_honeywell_osc_state
        - service: input_boolean.turn_off
          data:
            entity_id: input_boolean.private_honeywell_cooling_state
        - service: input_number.set_value
          data:
            entity_id: input_number.honeywell_timer
            value: "{{ state_attr('input_number.honeywell_timer', 'min') }}"

    honeywell_fan_speed:
      alias: "BlÃ¦ser for Honeywell"
      icon: mdi:fan
      sequence:
        - service: remote.send_command
          data:
            entity_id: "{{ remote }}"
            device: "{{ device }}"
            command: Fan Speed
            num_repeats: >-
              {%- set ns = namespace(current_speed_idx = 0, new_speed_idx = 3) -%}
              
              {%- for needle in state_attr(speed_list, 'options') %}
                {%- if needle == speed %}
                  {%- set ns.new_speed_idx = loop.index0 -%}
                {% endif %}
              {%- endfor %}
              
              {%- for needle in state_attr(speed_list, 'options') %}
                {%- if needle == states(speed_list) %}
                  {%- set ns.current_speed_idx = loop.index0 -%}
                {% endif %}
              {%- endfor %}

              {%- if ns.new_speed_idx < ns.current_speed_idx %}
                {{- (state_attr(speed_list, 'options') | length) - ns.current_speed_idx + ns.new_speed_idx }}
              {% else %}
                {{- ns.new_speed_idx - ns.current_speed_idx }}
              {% endif %}